{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","today","Date","timerId","updateTime","setState","this","window","setInterval","console","info","toUTCString","slice","clearInterval","clockName","props","className","React","Component","getRandomName","value","now","toString","App","isShownClock","handleNameChange","handleShowClock","handleHideClock","event","preventDefault","document","addEventListener","_","prevState","isChange","debug","removeEventListener","ReactDOM","render","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,MAAQ,CACNC,MAAO,IAAIC,MAFf,EAKEC,QAAU,EALZ,EAqBEC,WAAa,kBACX,EAAKC,SAAS,CAAEJ,MAAO,IAAIC,QAtB/B,uDAOE,WAA2B,IAAD,OACxBI,KAAKH,QAAUI,OAAOC,aAAY,kBAChC,EAAKJ,eAAe,OAT1B,gCAYE,WAEEK,QAAQC,KAAKJ,KAAKN,MAAMC,MAAMU,cAAcC,OAAO,IAAK,MAd5D,kCAiBE,WACEL,OAAOM,cAAcP,KAAKH,WAlB9B,oBAyBE,WACE,IAAQF,EAAUK,KAAKN,MAAfC,MACAa,EAAcR,KAAKS,MAAnBD,UAER,OACE,sBAAKE,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGF,IAGF,YAED,sBAAME,UAAU,cAAhB,SACGf,EAAMU,cAAcC,OAAO,IAAK,YAtC3C,GAA2BK,IAAMC,WCNjC,SAASC,IACP,IAAMC,EAAQlB,KAAKmB,MAAMC,WAAWV,OAAO,GAE3C,MAAM,SAAN,OAAgBQ,GAQX,IAAMG,EAAb,4MACEvB,MAAyB,CACvBc,UAAW,UACXU,cAAc,GAHlB,EAMErB,QAAU,EANZ,EAkCEsB,iBAAmB,kBACjB,EAAKpB,SAAS,CAAES,UAAWK,OAnC/B,EAsCEO,gBAAkB,WAChB,EAAKrB,SAAS,CAAEmB,cAAc,KAvClC,EA0CEG,gBAAkB,SAACC,GACjBA,EAAMC,iBAEN,EAAKxB,SAAS,CAAEmB,cAAc,KA7ClC,uDAQE,WAA2B,IAAD,OACxBlB,KAAKH,QAAUI,OAAOC,aAAY,kBAChC,EAAKiB,qBAAqB,MAE5BK,SAASC,iBAAiB,QAASzB,KAAKoB,iBAExCI,SAASC,iBAAiB,cAAezB,KAAKqB,mBAdlD,gCAiBE,SAAmBK,EAAiBC,GAClC,MAAoC3B,KAAKN,MAAjCwB,EAAR,EAAQA,aAAcV,EAAtB,EAAsBA,UAChBoB,EAAWD,EAAUnB,YAAcA,EAErCU,GAAgBU,GAElBzB,QAAQ0B,MAAR,uBAA8BF,EAAUnB,UAAxC,eAAwDA,MAvB9D,kCA2BE,WACEP,OAAOM,cAAcP,KAAKH,SAE1B2B,SAASM,oBAAoB,QAAS9B,KAAKoB,iBAC3CI,SAASM,oBAAoB,cAAe9B,KAAKqB,mBA/BrD,oBAgDE,WACE,MAAoCrB,KAAKN,MAAjCc,EAAR,EAAQA,UAAWU,EAAnB,EAAmBA,aAEnB,OACE,sBAAKR,UAAU,MAAf,UACE,6CAECQ,GAEG,cAAC,EAAD,CACEV,UAAWA,WA1DzB,GAAyBG,IAAMC,WCZ/BmB,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.d7670f77.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  clockName: string;\n};\n\ntype State = {\n  today: Date;\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    today: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount(): void {\n    this.timerId = window.setInterval(() => (\n      this.updateTime()), 1000);\n  }\n\n  componentDidUpdate(): void {\n    // eslint-disable-next-line no-console\n    console.info(this.state.today.toUTCString().slice(-12, -4));\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerId);\n  }\n\n  updateTime = () => (\n    this.setState({ today: new Date() })\n  );\n\n  render(): React.ReactNode {\n    const { today } = this.state;\n    const { clockName } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {today.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  clockName: string;\n  isShownClock: boolean;\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    clockName: 'Clock-0',\n    isShownClock: true,\n  };\n\n  timerId = 0;\n\n  componentDidMount(): void {\n    this.timerId = window.setInterval(() => (\n      this.handleNameChange()), 3300);\n\n    document.addEventListener('click', this.handleShowClock);\n\n    document.addEventListener('contextmenu', this.handleHideClock);\n  }\n\n  componentDidUpdate(_: Readonly<{}>, prevState: Readonly<State>): void {\n    const { isShownClock, clockName } = this.state;\n    const isChange = prevState.clockName !== clockName;\n\n    if (isShownClock && isChange) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevState.clockName} to ${clockName}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerId);\n\n    document.removeEventListener('click', this.handleShowClock);\n    document.removeEventListener('contextmenu', this.handleHideClock);\n  }\n\n  handleNameChange = () => (\n    this.setState({ clockName: getRandomName() })\n  );\n\n  handleShowClock = () => {\n    this.setState({ isShownClock: true });\n  };\n\n  handleHideClock = (event: MouseEvent) => {\n    event.preventDefault();\n\n    this.setState({ isShownClock: false });\n  };\n\n  render() {\n    const { clockName, isShownClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {isShownClock\n          && (\n            <Clock\n              clockName={clockName}\n            />\n          )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}